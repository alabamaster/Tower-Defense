/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <td>
#include <hamsandwich>
#include <cstrike>
#include <fakemeta>

#define PLUGIN "TD: Vip"
#define VERSION "1.0"
#define AUTHOR "tomcionek15 & grs4"
#define fm_create_entity(%1) engfunc(EngFunc_CreateNamedEntity, engfunc(EngFunc_AllocString, %1)) 

new g_CvarVip;

new g_CvarExtraSpeed;
new g_CvarExtraGold;
new g_CvarExtraMoney;
new g_CvarExtraDamage;
new g_CvarVipFlag;
new g_CvarVipStartWeapons;
//new g_CvarExtraAmmo;
//new g_CvarExtraFrags;
new g_CvarNextWaveExtraGold;
new g_CvarNextWaveExtraMoney;

new g_CvarVipChatPrefix;
new g_CvarVipChatColor;
new g_CvarVipTableStatus;

new bool:g_VipModel = true;
new bool:g_ChatPrefix = true;
new bool:g_ExtraWeapons = true;
new bool:g_ExtraDamage = true;
new bool:g_PlayerVip[33];

new g_MaxPlayers;
new g_szVipChatPrefix[16];
new g_szExtraWeaponsFlags[16];
new g_szVipModel[16];
new Float:g_ExtraDamageValue;

/* returns a model name of vip */
native td_get_vip_model(szModel[], iLen);

public plugin_init() 
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	RegisterHam(Ham_Spawn, "player", "playerRespawn", 1);
	register_clcmd("say /vip", "cmdVipInfo");
	
	register_message(get_user_msgid("ScoreAttrib"), "messageScoreAttrib");
	register_message(get_user_msgid("SayText"),"handleSayText");
	
	registerCvar();
	server_cmd("exec addons/amxmodx/configs/td_cvars.cfg");

	set_task(0.5, "getCvarsValue");
	
	g_MaxPlayers = get_maxplayers();
}

public registerCvar() {
	g_CvarVip			= create_cvar("td_vip", "1", _, _, true, 0.0, false, _);	
	g_CvarExtraSpeed 		= create_cvar("td_vip_extra_speed", "38", _, _, true, 0.0, false, _);
	g_CvarExtraDamage 		= create_cvar("td_vip_extra_damage_multiplier", "1.2", _, _, true, 0.0, false, _);
	g_CvarVipFlag 			= create_cvar("td_vip_flag", "t", _, _, false, _, false, _);
	g_CvarVipTableStatus		= create_cvar("td_vip_table", "1", _, _, true, 0.0, true, 1.0);
	g_CvarVipChatPrefix		= create_cvar("td_vip_chat_prefix", "[VIP]", _, _, false, _, false, _);

	/* Vip prefix colors: 	1 - Normal | 2 - Green | 3 - Team Color */
	g_CvarVipChatColor		= create_cvar("td_vip_chat_prefix_color", "1", _, _, true, 1.0, true, 3.0);
	
	/* for kill */
	g_CvarExtraGold 		= create_cvar("td_vip_extra_kill_gold", "2", _, _, true, 0.0, false, _);
	g_CvarExtraMoney 		= create_cvar("td_vip_extra_kill_money", "100", _, _, true, 0.0, false, _);
	//g_CvarExtraFrags		= create_cvar("td_vip_extra_kill_frags", "1", _, _, true, 0.0, false, _);
	//g_CvarExtraAmmo		= create_cvar("td_vip_extra_kill_ammo", "15", _, _, true, 0.0, false, _);
	
	/* every next wave */
	g_CvarNextWaveExtraGold	= create_cvar("td_vip_next_wave_extra_gold", "3", _, _, true, 0.0, false, _);
	g_CvarNextWaveExtraMoney	= create_cvar("td_vip_next_wave_extra_money", "500", _, _, true, 0.0, false, _);
	
	/*
	flags of start weapons
	a - deagle
	b - elite
	c - mp5
	d - p90
	e - galil
	f - ak47
	g - m4a1
	h - aug
	i - m249
	j - krieg
	k - awp
	l - g3sg1
	m - sg550
	*/
	g_CvarVipStartWeapons 	= create_cvar("td_vip_start_weapons", "bgl", _, _, false, _, false, _);
}

public plugin_precache() {
	new szModelDir[70];
	new szModel[33];
	
	td_get_vip_model(szModel, 32);
	log_amx(szModel)
	if(!strlen(szModel)) {
		g_VipModel = false 
		return;
	}

	formatex(szModelDir, charsmax(szModelDir), "models/player/%s/%s.mdl", szModel, szModel);
	precache_model(szModelDir);
}
public getCvarsValue() {
	g_CvarVip			= get_pcvar_num(g_CvarVip);
	g_CvarExtraGold 		= get_pcvar_num(g_CvarExtraGold)
	g_CvarExtraMoney 		= get_pcvar_num(g_CvarExtraMoney)
	//g_CvarExtraFrags		= get_pcvar_num(g_CvarExtraFrags)
	//g_CvarExtraAmmo		= get_pcvar_num(g_CvarExtraAmmo)
	
	g_CvarVipChatColor 		= get_pcvar_num(g_CvarVipChatColor) 
	g_CvarVipTableStatus		= get_pcvar_num(g_CvarVipTableStatus)
	g_CvarNextWaveExtraGold 	= get_pcvar_num(g_CvarNextWaveExtraGold)
	g_CvarNextWaveExtraMoney 	= get_pcvar_num(g_CvarNextWaveExtraMoney)
	
	get_pcvar_string(g_CvarVipStartWeapons, g_szExtraWeaponsFlags, 15);
	get_pcvar_string(g_CvarVipChatPrefix, g_szVipChatPrefix, charsmax(g_szVipChatPrefix))

	g_ExtraDamage = (g_ExtraDamageValue = get_pcvar_float(g_CvarExtraDamage)) ? true : false
	
	if(!strlen(g_szVipChatPrefix))
		g_ChatPrefix = false;

	if(!strlen(g_szExtraWeaponsFlags))
		g_ExtraWeapons = false;
}

/* Vip Status */
public messageScoreAttrib(iMsgID, iDest, iReceiver)  {   	
	if(g_CvarVipTableStatus && g_CvarVip) {
		new iPlayer = get_msg_arg_int(1);
		
		if(is_user_connected(iPlayer) && isUserVip(iPlayer))
			set_msg_arg_int(2, ARG_BYTE, is_user_alive(iPlayer) ? (1 << 2) : (1 << 0));  
	}
}

/* Chat prefix before player nick */
public handleSayText(msgId, msgDest, msgEnt) {
	if(g_ChatPrefix && g_CvarVip) {
		new id = get_msg_arg_int(1);
		
		if(!is_user_connected(id) || !isUserVip(id) || get_user_team(id) == 0)      
			return;
		
		new szTmp[256], szTmp2[256], szPrefix[16]
		get_msg_arg_string(2, szTmp, charsmax(szTmp))
		
		if(g_CvarVipChatColor == 1)
			formatex(szPrefix, charsmax(szPrefix), "^x01%s", g_szVipChatPrefix)	
		else 	if(g_CvarVipChatColor == 2)
			formatex(szPrefix, charsmax(szPrefix), "^x04%s", g_szVipChatPrefix)	
		else 	if(g_CvarVipChatColor == 3)
			formatex(szPrefix, charsmax(szPrefix), "^x03%s", g_szVipChatPrefix)	
		
		if(!equal(szTmp, "#Cstrike_Chat_All")) {
			add(szTmp2, charsmax(szTmp2), szPrefix);
			add(szTmp2, charsmax(szTmp2), " ");
			add(szTmp2, charsmax(szTmp2), szTmp);
		}
		else {
			add(szTmp2, charsmax(szTmp2), szPrefix);
			add(szTmp2, charsmax(szTmp2), "^x03 %s1^x01 :  %s2");
		}
		
		set_msg_arg_string(2, szTmp2);
	}
	return;
}

public playerRespawn(id) {
	if(!g_CvarVip)
		return;

	if(is_user_alive(id) && isUserVip(id) && g_ExtraWeapons) {
		setUserWeapon(id, g_szExtraWeaponsFlags)
		
		if(g_VipModel)
			set_task(0.5, "setVipModel", id + 4321);
	}	
}

public setVipModel(id){
	id -= 4321

	cs_set_user_model(id, g_szVipModel);
}
public cmdVipInfo(id) {
	// motd ...
}

public td_endwave(iWave) {
	if(!g_CvarVip)
		return;
	for(new id = 1 ; id <= g_MaxPlayers ; id++) {
		if(isUserVip(id) && is_user_connected(id) && !is_user_hltv(id)) {
			setEndWaveBonus(id)
		}
	}
}

public td_take_damage(id, ent, iWeapon, Float:damage, szData[2]) {
	if(!g_CvarVip)
		return;

	if(isUserVip(id) && g_ExtraDamage) {
		damage *= g_ExtraDamageValue
		szData[0] = floatround(damage)
	}
}

public client_authorized(id)
	if(g_CvarVip) 
		checkUserVip(id);

public checkUserVip(id) {
	static szFlag[3]

	if(!strlen(szFlag))
		get_pcvar_string(g_CvarVipFlag, szFlag, 2)
	
	if(get_user_flags(id) & read_flags(szFlag)) {
		g_PlayerVip[id] = true
		set_task(3.0, "setVipAttributes", id);
	}
}

public setVipAttributes(id) {
	td_set_user_info(id, PLAYER_EXTRA_GOLD, (td_get_user_info(id, PLAYER_EXTRA_GOLD) + g_CvarExtraGold))
	td_set_user_info(id, PLAYER_EXTRA_MONEY, (td_get_user_info(id, PLAYER_EXTRA_MONEY) + g_CvarExtraMoney))
	td_set_user_info(id, PLAYER_EXTRA_SPEED, (td_get_user_info(id, PLAYER_EXTRA_SPEED) + get_pcvar_num(g_CvarExtraSpeed)))
}

public setEndWaveBonus(id) {
	td_set_user_info(id, PLAYER_GOLD, (td_get_user_info(id, PLAYER_GOLD) +g_CvarNextWaveExtraGold))
	fm_cs_set_user_money(id, (fm_cs_get_user_money(id) + g_CvarNextWaveExtraMoney) > 16000 ? 16000 : (fm_cs_get_user_money(id) + g_CvarNextWaveExtraMoney))
}

public setUserWeapon(id, szFlags[]) {
	if(containi(szFlags, "a") != -1) {
		fm_give_item(id, "weapon_deagle")
		fm_set_user_bpammo(id, CSW_DEAGLE, 35)
	} if(containi(szFlags, "b") != -1) {
		fm_give_item(id, "weapon_elite") 
		fm_set_user_bpammo(id, CSW_ELITE, 120)
	} if(containi(szFlags, "c") != -1) {
		fm_give_item(id, "weapon_mp5navy") 
		fm_set_user_bpammo(id, CSW_MP5NAVY, 120)
	} if(containi(szFlags, "d") != -1) {
		fm_give_item(id, "weapon_p90")
		fm_set_user_bpammo(id, CSW_P90, 100)
	} if(containi(szFlags, "e") != -1) {
		fm_give_item(id, "weapon_galil") 
		fm_set_user_bpammo(id, CSW_GALIL, 90)	
	} if(containi(szFlags, "f") != -1) {
		fm_give_item(id, "weapon_ak47") 
		fm_set_user_bpammo(id, CSW_AK47, 90)	
	} if(containi(szFlags, "g") != -1) {
		fm_give_item(id, "weapon_m4a1")
		fm_set_user_bpammo(id, CSW_M4A1, 90)
	} if(containi(szFlags, "h") != -1) {
		fm_give_item(id, "weapon_aug")
		fm_set_user_bpammo(id, CSW_AUG, 90) 	
	} if(containi(szFlags, "i") != -1) {
		fm_give_item(id, "weapon_m249") 
		fm_set_user_bpammo(id, CSW_M249, 200)	
	} if(containi(szFlags, "j") != -1) {
		fm_give_item(id, "weapon_sg552")
		fm_set_user_bpammo(id, CSW_SG552, 90) 	
	} if(containi(szFlags, "k") != -1) {
		fm_give_item(id, "weapon_awp")
		fm_set_user_bpammo(id, CSW_AWP, 30)
	} if(containi(szFlags, "l") != -1) {
		fm_give_item(id, "weapon_g3sg1")
		fm_set_user_bpammo(id, CSW_G3SG1, 90) 	
	} if(containi(szFlags, "m") != -1) {
		fm_give_item(id, "weapon_sg550") 	
		fm_set_user_bpammo(id, CSW_SG550, 90)
	}
}

public bool:isUserVip(index)
	return g_PlayerVip[index] ? true : false

stock fm_give_item(index, const item[]) {
	if (!equal(item, "weapon_", 7) && !equal(item, "ammo_", 5))
		return 0;
	new ent = fm_create_entity(item);
	if (!pev_valid(ent))
		return 0;
	new Float:origin[3];
	pev(index, pev_origin, origin);
	set_pev(ent, pev_origin, origin);
	set_pev(ent, pev_spawnflags, pev(ent, pev_spawnflags) | SF_NORESPAWN);
	dllfunc(DLLFunc_Spawn, ent);
	new save = pev(ent, pev_solid);
	dllfunc(DLLFunc_Touch, ent, index);
	if (pev(ent, pev_solid) != save)
		return ent;
	engfunc(EngFunc_RemoveEntity, ent);
	return -1;
}

stock fm_cs_set_user_money(id, money, flash = 1)
{
	set_pdata_int(id, 115, money, 5)
	
	message_begin(MSG_ONE, get_user_msgid("Money"), {0,0,0}, id)
	write_long(money)
	write_byte(flash)
	message_end()
}

stock fm_cs_get_user_money(id)
	return get_pdata_int(id, 115)
	
stock fm_set_user_bpammo(id, weaponid, amnt) 
{ 
	static offset; 
	switch(weaponid) 
	{ 
		case CSW_AWP: offset = 377; 
			case CSW_SCOUT,CSW_AK47,CSW_G3SG1: offset = 378; 
			case CSW_M249: offset = 379;         
			case CSW_FAMAS,CSW_M4A1,CSW_AUG,CSW_SG550,CSW_GALI,CSW_SG552: offset = 380; 
			case CSW_M3,CSW_XM1014: offset = 381; 
			case CSW_USP,CSW_UMP45,CSW_MAC10: offset = 382; 
			case CSW_FIVESEVEN,CSW_P90: offset = 383; 
			case CSW_DEAGLE: offset = 384; 
			case CSW_P228: offset = 385; 
			case CSW_GLOCK18,CSW_MP5NAVY,CSW_TMP,CSW_ELITE: offset = 386; 
			case CSW_FLASHBANG: offset = 387; 
			case CSW_HEGRENADE: offset = 388; 
			case CSW_SMOKEGRENADE: offset = 389; 
			default: return 0; 
	} 
	set_pdata_int(id,offset,amnt,5); 
	
	return 1; 
} 
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1045\\ f0\\ fs16 \n\\ par }
*/
